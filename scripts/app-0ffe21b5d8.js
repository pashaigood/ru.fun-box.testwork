!function(){"use strict";angular.module("ruFunBoxTestwork",["as.sortable","yaMap"])}(),function(){"use strict";function t(){return{restrict:"E",templateUrl:"app/components/route/route.html",controller:"RouteController",controllerAs:"route",bindToController:!0}}angular.module("ruFunBoxTestwork").directive("route",t)}(),function(){"use strict";function t(t,o){var e=this;e.points=t,e.changeCenter=function(e){if(!angular.isArray(e))try{e=e.get("newCenter")}catch(n){return o.error(n),!1}t.center=e},e.changePosition=function(e,n){if(!angular.isArray(e))try{e=e.get("target").geometry.getCoordinates()}catch(r){return o.error(r),!1}n?(n.coords(e),t.build()):o.error(new Error("Point mast be defined."))},e.updateAddress=function(t){t&&t.updateAddress()},e.pointSetting={draggable:!0,preset:"islands#circleIcon",iconColor:"#3caa3c"},e.lineSetting={strokeColor:"#000000",strokeWidth:4,strokeOpacity:.5}}angular.module("ruFunBoxTestwork").controller("RouteController",t),t.$inject=["pointsService","$log"]}(),function(){"use strict";function t(t,o){var e=[];return e.center=[37.63261856079043,55.75561986082598],e.lines={geometry:{type:"LineString",coordinates:[]}},e.build=function(){e.lines.geometry.coordinates=t.map(e,function(t){return t.geometry.coordinates})},e.getPoint=o,e.add=function(o){o.coords(o.coords()||t.clone(e.center)),o.updateAddress(),e.push(o),e.build()},e.remove=function(o){t.remove(e,o),e.build()},e}angular.module("ruFunBoxTestwork").service("pointsService",t),t.$inject=["_","pointFactory"]}(),function(){"use strict";function t(){return{restrict:"E",templateUrl:"app/components/points/points.html",controller:"PointsController",controllerAs:"points",bindToController:!0}}angular.module("ruFunBoxTestwork").directive("points",t)}(),function(){"use strict";function t(t,o){var e=this;e.items=t,e.newPoint=t.getPoint(),e.add=function(n){return n&&13!=n.which||!e.newPoint.title()?!0:angular.isDefined(e.newPoint.coords())&&!angular.isArray(e.newPoint.coords())?(o.error(new Error("Coordinates must to be an array.")),o.error(e.newPoint.coords()),!1):(t.add(e.newPoint),void(e.newPoint=t.getPoint()))},e.remove=function(o){t.remove(o)},e.sortableOptions={containment:"#point-list",orderChanged:function(){t.build()}}}angular.module("ruFunBoxTestwork").controller("PointsController",t),t.$inject=["pointsService","$log"]}(),function(){function t(t,o){function e(t){t=t||{};var o=this;angular.extend(o,{geometry:{type:"Point"},properties:{}}),t.title&&(o.title(t.title),delete t.title),t.coords&&(o.coords(t.coords),o.updateAddress(),delete t.coords),angular.merge(o,t)}return e.prototype={title:function(t){return void 0!==t?this.properties.balloonContentHeader=t:this.properties.balloonContentHeader},coords:function(t){var o=this;return void 0!==t?(o.geometry.coordinates=t,o.properties.balloonContentFooter=o.toCoords(),t):o.geometry.coordinates},updateAddress:function(){var e=this;return t.get("https://geocode-maps.yandex.ru/1.x/?geocode="+e.coords().join(",")+"&format=json").then(function(t){var n;if(200==t.status){try{n=t.data.response.GeoObjectCollection.featureMember}catch(r){return void o.error(r)}n.length&&(e.properties.balloonContentBody=n[0].GeoObject.name)}})},toCoords:function(){var t=this.geometry.coordinates;return t[0].toFixed(6)+", "+t[1].toFixed(6)}},function(t){return new e(t)}}angular.module("ruFunBoxTestwork").factory("pointFactory",t),t.$inject=["$http","$log"]}(),function(){"use strict";function t(t){t.add(t.getPoint({title:"Точка 1",coords:[37.6315456771846,55.75716869581239]})),t.add(t.getPoint({title:"Точка 2",coords:[37.63520507812404,55.753752974261566]})),t.add(t.getPoint({title:"Точка 3",coords:[37.633488464354116,55.753486748594234]})),t.add(t.getPoint({title:"Точка 4",coords:[37.630247488020885,55.75655158871031]}))}angular.module("ruFunBoxTestwork").controller("MainController",t),t.$inject=["pointsService"]}(),function(){"use strict";function t(t){t.debug("runBlock end")}angular.module("ruFunBoxTestwork").run(t),t.$inject=["$log"]}(),function(){"use strict";angular.module("ruFunBoxTestwork").constant("_",_)}(),function(){"use strict";function t(t){t.debugEnabled(!0)}angular.module("ruFunBoxTestwork").config(t),t.$inject=["$logProvider"]}(),angular.module("ruFunBoxTestwork").run(["$templateCache",function(t){t.put("app/components/points/points.html",'<div class="form-group"><input ng-model="points.newPoint.title" ng-keypress="points.add($event)" class="form-control" placeholder="Точка {{points.items.length+1}}" ng-model-options="{ getterSetter: true }" type="text"></div><ul id="point-list" class="list-group no-select" as-sortable="points.sortableOptions" ng-model="points.items"><li as-sortable-item="" ng-repeat="point in points.items" class="list-group-item"><span as-sortable-item-handle="" class="row"><span class="col-xs-10" ng-bind="point.title()"></span> <span class="col-xs-2 text-right"><button class="btn btn-xs" ng-click="points.remove(point)"><i class="glyphicon glyphicon-remove"></i></button></span></span></li></ul><div ng-if="!points.items.length"><h4 class="text-center">Список точек пуст</h4></div>'),t.put("app/components/route/route.html",'<ya-map ya-zoom="15" ya-center="{{route.points.center}}" ya-event-boundschange="route.changeCenter($event)" ya-controls="searchControl"><ya-geo-object ya-source="route.points.lines" ya-options="{{route.lineSetting}}"></ya-geo-object><ya-geo-object ng-repeat="point in route.points" ya-source="point" ya-event-geometrychange="route.changePosition($event, point)" ya-event-dragend="route.updateAddress(point)" ya-options="{{route.pointSetting}}"></ya-geo-object></ya-map>')}]);
//# sourceMappingURL=../maps/scripts/app-0ffe21b5d8.js.map